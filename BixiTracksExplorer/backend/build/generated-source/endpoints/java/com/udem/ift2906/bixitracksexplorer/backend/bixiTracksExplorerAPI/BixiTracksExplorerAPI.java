/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-01-14 17:53:03 UTC)
 * on 2015-02-24 at 22:54:17 UTC 
 * Modify at your own risk.
 */

package com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI;

/**
 * Service definition for BixiTracksExplorerAPI (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link BixiTracksExplorerAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class BixiTracksExplorerAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.1 of the bixiTracksExplorerAPI library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "bixiTracksExplorerAPI/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public BixiTracksExplorerAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  BixiTracksExplorerAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "debugDateRange".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link DebugDateRange#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public DebugDateRange debugDateRange() throws java.io.IOException {
    DebugDateRange result = new DebugDateRange();
    initialize(result);
    return result;
  }

  public class DebugDateRange extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection> {

    private static final String REST_PATH = "DebugDateRange";

    /**
     * Create a request for the method "debugDateRange".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link DebugDateRange#execute()} method to invoke the
     * remote operation. <p> {@link DebugDateRange#initialize(com.google.api.client.googleapis.service
     * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected DebugDateRange() {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection.class);
    }

    @Override
    public DebugDateRange setAlt(java.lang.String alt) {
      return (DebugDateRange) super.setAlt(alt);
    }

    @Override
    public DebugDateRange setFields(java.lang.String fields) {
      return (DebugDateRange) super.setFields(fields);
    }

    @Override
    public DebugDateRange setKey(java.lang.String key) {
      return (DebugDateRange) super.setKey(key);
    }

    @Override
    public DebugDateRange setOauthToken(java.lang.String oauthToken) {
      return (DebugDateRange) super.setOauthToken(oauthToken);
    }

    @Override
    public DebugDateRange setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DebugDateRange) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DebugDateRange setQuotaUser(java.lang.String quotaUser) {
      return (DebugDateRange) super.setQuotaUser(quotaUser);
    }

    @Override
    public DebugDateRange setUserIp(java.lang.String userIp) {
      return (DebugDateRange) super.setUserIp(userIp);
    }

    @Override
    public DebugDateRange set(String parameterName, Object value) {
      return (DebugDateRange) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "debugOneTrack".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link DebugOneTrack#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public DebugOneTrack debugOneTrack() throws java.io.IOException {
    DebugOneTrack result = new DebugOneTrack();
    initialize(result);
    return result;
  }

  public class DebugOneTrack extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track> {

    private static final String REST_PATH = "DebugOneTrack";

    /**
     * Create a request for the method "debugOneTrack".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link DebugOneTrack#execute()} method to invoke the
     * remote operation. <p> {@link DebugOneTrack#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected DebugOneTrack() {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track.class);
    }

    @Override
    public DebugOneTrack setAlt(java.lang.String alt) {
      return (DebugOneTrack) super.setAlt(alt);
    }

    @Override
    public DebugOneTrack setFields(java.lang.String fields) {
      return (DebugOneTrack) super.setFields(fields);
    }

    @Override
    public DebugOneTrack setKey(java.lang.String key) {
      return (DebugOneTrack) super.setKey(key);
    }

    @Override
    public DebugOneTrack setOauthToken(java.lang.String oauthToken) {
      return (DebugOneTrack) super.setOauthToken(oauthToken);
    }

    @Override
    public DebugOneTrack setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DebugOneTrack) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DebugOneTrack setQuotaUser(java.lang.String quotaUser) {
      return (DebugOneTrack) super.setQuotaUser(quotaUser);
    }

    @Override
    public DebugOneTrack setUserIp(java.lang.String userIp) {
      return (DebugOneTrack) super.setUserIp(userIp);
    }

    @Override
    public DebugOneTrack set(String parameterName, Object value) {
      return (DebugOneTrack) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTrackFromTimeUTCKeyDate".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link GetTrackFromTimeUTCKeyDate#execute()} method to invoke the
   * remote operation.
   *
   * @param timeUTCDate
   * @return the request
   */
  public GetTrackFromTimeUTCKeyDate getTrackFromTimeUTCKeyDate(com.google.api.client.util.DateTime timeUTCDate) throws java.io.IOException {
    GetTrackFromTimeUTCKeyDate result = new GetTrackFromTimeUTCKeyDate(timeUTCDate);
    initialize(result);
    return result;
  }

  public class GetTrackFromTimeUTCKeyDate extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track> {

    private static final String REST_PATH = "GetTrackFromTimeUTCKeyDate/{TimeUTCDate}";

    /**
     * Create a request for the method "getTrackFromTimeUTCKeyDate".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link GetTrackFromTimeUTCKeyDate#execute()} method
     * to invoke the remote operation. <p> {@link GetTrackFromTimeUTCKeyDate#initialize(com.google.api
     * .client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param timeUTCDate
     * @since 1.13
     */
    protected GetTrackFromTimeUTCKeyDate(com.google.api.client.util.DateTime timeUTCDate) {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track.class);
      this.timeUTCDate = com.google.api.client.util.Preconditions.checkNotNull(timeUTCDate, "Required parameter timeUTCDate must be specified.");
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setAlt(java.lang.String alt) {
      return (GetTrackFromTimeUTCKeyDate) super.setAlt(alt);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setFields(java.lang.String fields) {
      return (GetTrackFromTimeUTCKeyDate) super.setFields(fields);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setKey(java.lang.String key) {
      return (GetTrackFromTimeUTCKeyDate) super.setKey(key);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setOauthToken(java.lang.String oauthToken) {
      return (GetTrackFromTimeUTCKeyDate) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTrackFromTimeUTCKeyDate) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setQuotaUser(java.lang.String quotaUser) {
      return (GetTrackFromTimeUTCKeyDate) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTrackFromTimeUTCKeyDate setUserIp(java.lang.String userIp) {
      return (GetTrackFromTimeUTCKeyDate) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("TimeUTCDate")
    private com.google.api.client.util.DateTime timeUTCDate;

    /**

     */
    public com.google.api.client.util.DateTime getTimeUTCDate() {
      return timeUTCDate;
    }

    public GetTrackFromTimeUTCKeyDate setTimeUTCDate(com.google.api.client.util.DateTime timeUTCDate) {
      this.timeUTCDate = timeUTCDate;
      return this;
    }

    @Override
    public GetTrackFromTimeUTCKeyDate set(String parameterName, Object value) {
      return (GetTrackFromTimeUTCKeyDate) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTrackFromTimeUTCKeyString".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link GetTrackFromTimeUTCKeyString#execute()} method to invoke the
   * remote operation.
   *
   * @param timeUTCDate
   * @return the request
   */
  public GetTrackFromTimeUTCKeyString getTrackFromTimeUTCKeyString(java.lang.String timeUTCDate) throws java.io.IOException {
    GetTrackFromTimeUTCKeyString result = new GetTrackFromTimeUTCKeyString(timeUTCDate);
    initialize(result);
    return result;
  }

  public class GetTrackFromTimeUTCKeyString extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track> {

    private static final String REST_PATH = "GetTrackFromTimeUTCKeyString/{TimeUTCDate}";

    /**
     * Create a request for the method "getTrackFromTimeUTCKeyString".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link GetTrackFromTimeUTCKeyString#execute()} method
     * to invoke the remote operation. <p> {@link GetTrackFromTimeUTCKeyString#initialize(com.google.a
     * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
     * instance immediately after invoking the constructor. </p>
     *
     * @param timeUTCDate
     * @since 1.13
     */
    protected GetTrackFromTimeUTCKeyString(java.lang.String timeUTCDate) {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.Track.class);
      this.timeUTCDate = com.google.api.client.util.Preconditions.checkNotNull(timeUTCDate, "Required parameter timeUTCDate must be specified.");
    }

    @Override
    public GetTrackFromTimeUTCKeyString setAlt(java.lang.String alt) {
      return (GetTrackFromTimeUTCKeyString) super.setAlt(alt);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setFields(java.lang.String fields) {
      return (GetTrackFromTimeUTCKeyString) super.setFields(fields);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setKey(java.lang.String key) {
      return (GetTrackFromTimeUTCKeyString) super.setKey(key);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setOauthToken(java.lang.String oauthToken) {
      return (GetTrackFromTimeUTCKeyString) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTrackFromTimeUTCKeyString) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setQuotaUser(java.lang.String quotaUser) {
      return (GetTrackFromTimeUTCKeyString) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTrackFromTimeUTCKeyString setUserIp(java.lang.String userIp) {
      return (GetTrackFromTimeUTCKeyString) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("TimeUTCDate")
    private java.lang.String timeUTCDate;

    /**

     */
    public java.lang.String getTimeUTCDate() {
      return timeUTCDate;
    }

    public GetTrackFromTimeUTCKeyString setTimeUTCDate(java.lang.String timeUTCDate) {
      this.timeUTCDate = timeUTCDate;
      return this;
    }

    @Override
    public GetTrackFromTimeUTCKeyString set(String parameterName, Object value) {
      return (GetTrackFromTimeUTCKeyString) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTracksForDateRange".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link GetTracksForDateRange#execute()} method to invoke the remote
   * operation.
   *
   * @param startDate
   * @param endDate
   * @return the request
   */
  public GetTracksForDateRange getTracksForDateRange(com.google.api.client.util.DateTime startDate, com.google.api.client.util.DateTime endDate) throws java.io.IOException {
    GetTracksForDateRange result = new GetTracksForDateRange(startDate, endDate);
    initialize(result);
    return result;
  }

  public class GetTracksForDateRange extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection> {

    private static final String REST_PATH = "GetTracksForDateRange/{StartDate}/{EndDate}";

    /**
     * Create a request for the method "getTracksForDateRange".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link GetTracksForDateRange#execute()} method to
     * invoke the remote operation. <p> {@link GetTracksForDateRange#initialize(com.google.api.client.
     * googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param startDate
     * @param endDate
     * @since 1.13
     */
    protected GetTracksForDateRange(com.google.api.client.util.DateTime startDate, com.google.api.client.util.DateTime endDate) {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection.class);
      this.startDate = com.google.api.client.util.Preconditions.checkNotNull(startDate, "Required parameter startDate must be specified.");
      this.endDate = com.google.api.client.util.Preconditions.checkNotNull(endDate, "Required parameter endDate must be specified.");
    }

    @Override
    public GetTracksForDateRange setAlt(java.lang.String alt) {
      return (GetTracksForDateRange) super.setAlt(alt);
    }

    @Override
    public GetTracksForDateRange setFields(java.lang.String fields) {
      return (GetTracksForDateRange) super.setFields(fields);
    }

    @Override
    public GetTracksForDateRange setKey(java.lang.String key) {
      return (GetTracksForDateRange) super.setKey(key);
    }

    @Override
    public GetTracksForDateRange setOauthToken(java.lang.String oauthToken) {
      return (GetTracksForDateRange) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTracksForDateRange setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTracksForDateRange) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTracksForDateRange setQuotaUser(java.lang.String quotaUser) {
      return (GetTracksForDateRange) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTracksForDateRange setUserIp(java.lang.String userIp) {
      return (GetTracksForDateRange) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("StartDate")
    private com.google.api.client.util.DateTime startDate;

    /**

     */
    public com.google.api.client.util.DateTime getStartDate() {
      return startDate;
    }

    public GetTracksForDateRange setStartDate(com.google.api.client.util.DateTime startDate) {
      this.startDate = startDate;
      return this;
    }

    @com.google.api.client.util.Key("EndDate")
    private com.google.api.client.util.DateTime endDate;

    /**

     */
    public com.google.api.client.util.DateTime getEndDate() {
      return endDate;
    }

    public GetTracksForDateRange setEndDate(com.google.api.client.util.DateTime endDate) {
      this.endDate = endDate;
      return this;
    }

    @Override
    public GetTracksForDateRange set(String parameterName, Object value) {
      return (GetTracksForDateRange) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTracks".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link ListTracks#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public ListTracks listTracks() throws java.io.IOException {
    ListTracks result = new ListTracks();
    initialize(result);
    return result;
  }

  public class ListTracks extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection> {

    private static final String REST_PATH = "track";

    /**
     * Create a request for the method "listTracks".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link ListTracks#execute()} method to invoke the
     * remote operation. <p> {@link
     * ListTracks#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListTracks() {
      super(BixiTracksExplorerAPI.this, "GET", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTracks setAlt(java.lang.String alt) {
      return (ListTracks) super.setAlt(alt);
    }

    @Override
    public ListTracks setFields(java.lang.String fields) {
      return (ListTracks) super.setFields(fields);
    }

    @Override
    public ListTracks setKey(java.lang.String key) {
      return (ListTracks) super.setKey(key);
    }

    @Override
    public ListTracks setOauthToken(java.lang.String oauthToken) {
      return (ListTracks) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTracks setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTracks) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTracks setQuotaUser(java.lang.String quotaUser) {
      return (ListTracks) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTracks setUserIp(java.lang.String userIp) {
      return (ListTracks) super.setUserIp(userIp);
    }

    @Override
    public ListTracks set(String parameterName, Object value) {
      return (ListTracks) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "load10TracksFromXML".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link Load10TracksFromXML#execute()} method to invoke the remote
   * operation.
   *
   * @param startIdx
   * @return the request
   */
  public Load10TracksFromXML load10TracksFromXML(java.lang.Integer startIdx) throws java.io.IOException {
    Load10TracksFromXML result = new Load10TracksFromXML(startIdx);
    initialize(result);
    return result;
  }

  public class Load10TracksFromXML extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection> {

    private static final String REST_PATH = "load10TracksFromXML/{startIdx}";

    /**
     * Create a request for the method "load10TracksFromXML".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link Load10TracksFromXML#execute()} method to
     * invoke the remote operation. <p> {@link Load10TracksFromXML#initialize(com.google.api.client.go
     * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param startIdx
     * @since 1.13
     */
    protected Load10TracksFromXML(java.lang.Integer startIdx) {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.TrackCollection.class);
      this.startIdx = com.google.api.client.util.Preconditions.checkNotNull(startIdx, "Required parameter startIdx must be specified.");
    }

    @Override
    public Load10TracksFromXML setAlt(java.lang.String alt) {
      return (Load10TracksFromXML) super.setAlt(alt);
    }

    @Override
    public Load10TracksFromXML setFields(java.lang.String fields) {
      return (Load10TracksFromXML) super.setFields(fields);
    }

    @Override
    public Load10TracksFromXML setKey(java.lang.String key) {
      return (Load10TracksFromXML) super.setKey(key);
    }

    @Override
    public Load10TracksFromXML setOauthToken(java.lang.String oauthToken) {
      return (Load10TracksFromXML) super.setOauthToken(oauthToken);
    }

    @Override
    public Load10TracksFromXML setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Load10TracksFromXML) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Load10TracksFromXML setQuotaUser(java.lang.String quotaUser) {
      return (Load10TracksFromXML) super.setQuotaUser(quotaUser);
    }

    @Override
    public Load10TracksFromXML setUserIp(java.lang.String userIp) {
      return (Load10TracksFromXML) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer startIdx;

    /**

     */
    public java.lang.Integer getStartIdx() {
      return startIdx;
    }

    public Load10TracksFromXML setStartIdx(java.lang.Integer startIdx) {
      this.startIdx = startIdx;
      return this;
    }

    @Override
    public Load10TracksFromXML set(String parameterName, Object value) {
      return (Load10TracksFromXML) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "sayHi".
   *
   * This request holds the parameters needed by the bixiTracksExplorerAPI server.  After setting any
   * optional parameters, call the {@link SayHi#execute()} method to invoke the remote operation.
   *
   * @param name
   * @return the request
   */
  public SayHi sayHi(java.lang.String name) throws java.io.IOException {
    SayHi result = new SayHi(name);
    initialize(result);
    return result;
  }

  public class SayHi extends BixiTracksExplorerAPIRequest<com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.MyBean> {

    private static final String REST_PATH = "sayHi/{name}";

    /**
     * Create a request for the method "sayHi".
     *
     * This request holds the parameters needed by the the bixiTracksExplorerAPI server.  After
     * setting any optional parameters, call the {@link SayHi#execute()} method to invoke the remote
     * operation. <p> {@link
     * SayHi#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param name
     * @since 1.13
     */
    protected SayHi(java.lang.String name) {
      super(BixiTracksExplorerAPI.this, "POST", REST_PATH, null, com.udem.ift2906.bixitracksexplorer.backend.bixiTracksExplorerAPI.model.MyBean.class);
      this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
    }

    @Override
    public SayHi setAlt(java.lang.String alt) {
      return (SayHi) super.setAlt(alt);
    }

    @Override
    public SayHi setFields(java.lang.String fields) {
      return (SayHi) super.setFields(fields);
    }

    @Override
    public SayHi setKey(java.lang.String key) {
      return (SayHi) super.setKey(key);
    }

    @Override
    public SayHi setOauthToken(java.lang.String oauthToken) {
      return (SayHi) super.setOauthToken(oauthToken);
    }

    @Override
    public SayHi setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SayHi) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SayHi setQuotaUser(java.lang.String quotaUser) {
      return (SayHi) super.setQuotaUser(quotaUser);
    }

    @Override
    public SayHi setUserIp(java.lang.String userIp) {
      return (SayHi) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String name;

    /**

     */
    public java.lang.String getName() {
      return name;
    }

    public SayHi setName(java.lang.String name) {
      this.name = name;
      return this;
    }

    @Override
    public SayHi set(String parameterName, Object value) {
      return (SayHi) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link BixiTracksExplorerAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link BixiTracksExplorerAPI}. */
    @Override
    public BixiTracksExplorerAPI build() {
      return new BixiTracksExplorerAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link BixiTracksExplorerAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setBixiTracksExplorerAPIRequestInitializer(
        BixiTracksExplorerAPIRequestInitializer bixitracksexplorerapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(bixitracksexplorerapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
